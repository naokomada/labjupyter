# -*- coding: utf-8 -*-

import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import KMeans
 
docs = np.array([
        '’µí’Æý        ’¤ò ’Çã’¤¦',
        '’¥Ñ’¥ó         ’¤ò ’Çã’¤¦',
        '’¥Ñ’¥ó         ’¤ò ’¿©’¤Ù’¤ë',
        '’¤ª’²Û’»Ò       ’¤ò ’¿©’¤Ù’¤ë',
        '’ËÜ           ’¤ò ’Çã’¤¦',
        '’¥Ñ’¥ó ’¤È ’¤ª’²Û’»Ò ’¤ò ’¿©’¤Ù’¤ë',
        '’¤ª’²Û’»Ò        ’¤ò ’Çã’¤¦',
        '’¥®’¥¿’¡¼        ’¤ò ’½¬’¤¦',
        '’½ñ’Æ»        ’¤ò ’½¬’¤¦',
        '’¿å’±Ë        ’¤ò ’½¬’¤¦',
        '’¥Ñ’¥ó ’¤È ’¥Ñ’¥ó   ’¤ò ’¿©’¤Ù’¤ë'
        ])
 
#
# ’¥Ù’¥¯’¥È’¥ë’²½
#
vectorizer = TfidfVectorizer(use_idf=True, token_pattern=u'(?u)\\b\\w+\\b')
vecs = vectorizer.fit_transform(docs)
 
print vecs.toarray()
#-----------------------------------------------------
# [[ 0.    0.    0.32  0.    0.    0.8   0.51  0.  ]
#  [ 0.    0.    0.41  0.65  0.    0.    0.65  0.  ]
#  [ 0.    0.    0.41  0.65  0.    0.    0.    0.65]
#  [ 0.69  0.    0.38  0.    0.    0.    0.    0.61]
#  [ 0.    0.    0.32  0.    0.8   0.    0.51  0.  ]
#  [ 0.49  0.57  0.27  0.43  0.    0.    0.    0.43]
#  [ 0.69  0.    0.38  0.    0.    0.    0.61  0.  ]
#  [ 0.    0.49  0.24  0.75  0.    0.    0.    0.37]]
#-----------------------------------------------------
 
 
#
# ’¥¯’¥é’¥¹’¥¿’¥ê’¥ó’¥°
#
clusters = KMeans(n_clusters=4, random_state=0).fit_predict(vecs)
for doc, cls in zip(docs, clusters):
    print cls, doc
 
#----------------------------
# 0 - ’µí’Æý        ’¤ò ’Çã’¤¦
# 0 - ’¥Ñ’¥ó         ’¤ò ’Çã’¤¦
# 1 - ’¥Ñ’¥ó         ’¤ò ’¿©’¤Ù’¤ë
# 1 - ’¤ª’²Û’»Ò       ’¤ò ’¿©’¤Ù’¤ë
# 0 - ’ËÜ           ’¤ò ’Çã’¤¦
# 1 - ’¥Ñ’¥ó ’¤È ’¤ª’²Û’»Ò ’¤ò ’¿©’¤Ù’¤ë
# 0 - ’¤ª’²Û’»Ò        ’¤ò ’Çã’¤¦
# 1 - ’¥Ñ’¥ó ’¤È ’¥Ñ’¥ó   ’¤ò ’¿©’¤Ù’¤ë
#----------------------------
